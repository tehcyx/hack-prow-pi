# This is a basic workflow to help you get started with Actions

name: Publish ARM images of prow@master

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Login to GitHub Docker Registry
      run: docker login docker.pkg.github.com --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      env:
        DOCKER_USERNAME: ${{ secrets.GITHUB_DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.GITHUB_DOCKER_PASSWORD }}
    
    - name: run make, building all images
      run:  |
        make

    - name: tag images
      run: |
        make tag

    - name: push image
      run: |
        make push

    - name: create starter.yaml artifact
      run: |
        make starter
    
    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: starter.yaml
        path: artifact/starter.yaml

    - name: set tag env var
      run: |
        echo "::set-env name=GH_TAG::${cat artifact/TAG}"

    - name: create a prerelease
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.GH_TAG }}
        release_name: Release ${{ env.GH_TAG }}
        body: |
          Latest kubernetes/test-infra@master branch components built for ARM
          - tide
          - status-reconciler
          - hook
          - plank
          - sinker
          - deck
          - horologium
        draft: false
        prerelease: true

    - name: upload yaml to prerelease
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./artifact/starter.yaml
        asset_name: starter.yaml
        asset_content_type: text/plain